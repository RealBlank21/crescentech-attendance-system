version: '3.8' # Or higher

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: crescentech-db
      # IMPORTANT: For production, use Docker secrets for passwords instead of plaintext environment variables.
      MYSQL_ROOT_PASSWORD: CrEsCeNtEch@3240
      MYSQL_USER: crescentuser
      MYSQL_PASSWORD: CrEsCeNtEch@3240
      MYSQL_LOG_CONSOLE: "true" # Useful for debugging
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --max-allowed-packet=128M
    ports:
      - "3306:3306" # Exposes DB port. Ensure this is secured if accessible externally.
    volumes:
      - mysql_data:/var/lib/mysql # Persists MySQL data
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}"]
      timeout: 5s
      retries: 10
      interval: 5s
      start_period: 30s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  web:
    build: . # Tells Docker Compose to build an image from the Dockerfile in the current directory
    ports:
      - "5000:8000" # Host port 5000 maps to container port 8000 (as Gunicorn binds to 8000 in your Dockerfile CMD)
    environment:
      - MYSQL_HOST=db
      - MYSQL_USERNAME=crescentuser
      - MYSQL_PASSWORD=CrEsCeNtEch@3240
      - MYSQL_DATABASE=crescentech-db
      - MYSQL_PORT=3306
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    volumes:
      - ./static/uploads:/app/static/uploads
    depends_on:
      db:
        condition: service_healthy
    # 'command' directive is removed to allow Dockerfile's CMD to execute
    healthcheck:
      # This healthcheck will now ping port 8000 inside the container
      test: ["CMD", "curl", "-f", "http://localhost:8000/"] # Adjust path if your app has a specific health endpoint.
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  mysql_data:
    driver: local
